<!DOCTYPE html>
<html lang="pt-BR">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Novo Pedido</title>
        <style>
            body {
                font-family: Arial, sans-serif;
                line-height: 1.6;
                color: #333;
                margin: 0;
                padding: 0;
                background-color: #f4f4f4;
            }
            .container {
                width: 80%;
                max-width: 600px;
                margin: auto;
                overflow: hidden;
                padding: 20px;
            }
            header {
                background: #0046BE;
                color: #ffffff;
                padding-top: 30px;
                min-height: 70px;
                border-bottom: #0033A0 3px solid;
            }
            header h1 {
                margin: 0;
                text-align: center;
                padding-bottom: 20px;
            }
            .menu {
                background: #fff;
                border-radius: 8px;
                box-shadow: 0 2px 5px rgba(0,0,0,0.1);
                padding: 20px;
                margin-top: 20px;
            }
            .form-group {
                margin-bottom: 20px;
            }
            label {
                display: block;
                margin-bottom: 5px;
                color: #0046BE;
            }
            input[type="text"],
            input[type="number"],
            select {
                width: 100%;
                padding: 8px;
                border: 1px solid #ddd;
                border-radius: 4px;
                box-sizing: border-box;
            }
            button {
                display: block;
                width: 100%;
                padding: 10px;
                background-color: #0046BE;
                color: #ffffff;
                border: none;
                border-radius: 4px;
                cursor: pointer;
                font-size: 16px;
            }
            button:hover {
                background-color: #0033A0;
            }
            .message {
                margin-top: 20px;
                padding: 10px;
                border-radius: 4px;
                text-align: center;
            }
            .success {
                background-color: #d4edda;
                color: #155724;
            }
            .error {
                background-color: #f8d7da;
                color: #721c24;
            }
            .produto-item {
                display: flex;
                gap: 10px;
                align-items: center;
                margin-bottom: 10px;
            }
            .produto-item button {
                padding: 5px 10px;
                font-size: 14px;
                width: auto;
            }
        </style>
    </head>
<body>
    <header>
        <div class="container">
            <h1>Novo Pedido</h1>
        </div>
    </header>

    <div class="container">
        <div class="menu">
            <form id="novoPedidoForm">
                <div class="form-group">
                    <label for="cliente">Cliente:</label>
                    <select id="cliente" name="cliente" required>
                        <option value="">Selecione o cliente</option>
                        <!-- Aqui você irá popular a lista de clientes -->
                    </select>
                </div>
                <div class="form-group">
                    <label>Produtos:</label>
                    <div id="produtos-container">
                        <div class="produto-item">
                            <select name="produtos[]" required>
                                <option value="">Selecione o produto</option>
                                <!-- Aqui você irá popular a lista de produtos -->
                            </select>
                            <input type="number" name="quantidades[]" placeholder="Quantidade" min="1" required>
                            <button type="button" class="remover-produto">Remover</button>
                        </div>
                    </div>
                    <button type="button" id="adicionar-produto">Adicionar Produto</button>
                </div>
                <button type="submit">Criar Pedido</button>
            </form>
            <div id="message" class="message" style="display: none;"></div>
        </div>
    </div>

    <script>
        const produtosContainer = document.getElementById('produtos-container');
const adicionarProdutoBtn = document.getElementById('adicionar-produto');

adicionarProdutoBtn.addEventListener('click', async () => {
    const produtoItem = document.createElement('div');
    produtoItem.classList.add('produto-item');

    // Criar os elementos do produto (select de produtos, input de quantidade, botão de adição)
    const produtoSelect = document.createElement('select');
    produtoSelect.name = 'produtos[]';
    produtoSelect.required = true;
    await loadProducts(produtoSelect); // Carregar a lista de produtos

    const quantidadeInput = document.createElement('input');
    quantidadeInput.type = 'number';
    quantidadeInput.name = 'quantidades[]';
    quantidadeInput.placeholder = 'Quantidade';
    quantidadeInput.min = '1';
    quantidadeInput.required = true;

    const adicionarBtn = document.createElement('button');
    adicionarBtn.type = 'button';
    adicionarBtn.textContent = 'Adicionar';
    adicionarBtn.classList.add('adicionar-produto');

    produtoItem.appendChild(produtoSelect);
    produtoItem.appendChild(quantidadeInput);
    produtoItem.appendChild(adicionarBtn);

    produtosContainer.appendChild(produtoItem);
});

// Restante do código mantido igual

        produtosContainer.addEventListener('click', (event) => {
            if (event.target.classList.contains('adicionar-produto')) {
                const produtoItem = event.target.closest('.produto-item');
                // Obter os valores do produto e quantidade
                const produto = produtoItem.querySelector('select').value;
                const quantidade = produtoItem.querySelector('input[type="number"]').value;
                // Adicionar o produto ao pedido
                addProductToOrder(produto, quantidade);
                // Remover o item de produto do formulário
                produtoItem.remove();
            } else if (event.target.classList.contains('remover-produto')) {
                event.target.closest('.produto-item').remove();
            }
        });

        async function addProductToOrder(productId, quantity) {
            try {
                const response = await fetch('/api/orders/add', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ productId, quantity })
                });
                const result = await response.json();
                if (response.ok) {
                    showMessage('Produto adicionado ao pedido', 'success');
                } else {
                    showMessage('Erro ao adicionar produto ao pedido', 'error');
                }
            } catch (error) {
                console.error('Erro ao adicionar produto ao pedido:', error);
                showMessage('Erro ao adicionar produto ao pedido', 'error');
            }
        }

        function showMessage(message, type) {
            const messageElement = document.getElementById('message');
            messageElement.textContent = message;
            messageElement.classList.remove('success', 'error');
            messageElement.classList.add(type);
            messageElement.style.display = 'block';
        }
        async function loadProducts() {
            try {
                const response = await fetch('/api/products');
                const products = await response.json();

                const productSelect = document.querySelector('#produtos-container select[name="produtos[]"]');
                productSelect.innerHTML = '<option value="">Selecione o produto</option>';

                products.forEach(product => {
                if (product.disponibilidade) {
                    const option = document.createElement('option');
                    option.value = product.id;
                    option.text = `${product.nome} - ${product.descricao} (R$ ${product.preco})`;
                    productSelect.add(option);
                }
                });
            } catch (error) {
                console.error('Erro ao obter produtos:', error);
                showMessage('Erro ao obter a lista de produtos', 'error');
            }
        }
    </script>   
    <script>
        document.addEventListener('DOMContentLoaded', loadProducts);
    </script>   
</body>

</html>