<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/public/menuDropdown/dropdown.css">
    <title>Lista de Produtos</title>
    <link rel="stylesheet" href="/css/inicio.css">
    <style>
        body {
            font-family: Arial, sans-serif;
            line-height: 1.6;
            color: #333;
            margin: 0;
            padding: 0;
            background-color: #f4f4f4;
        }
        .container {
            width: 80%;
            margin: auto;
            overflow: hidden;
            padding: 20px;
        }
        
        header h1 {
            margin: 0;
            text-align: center;
            padding-bottom: 20px;
        }
        .product-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 20px;
            padding: 20px 0;
        }
        .product-card {
            background: #fff;
            border-radius: 8px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
            padding: 20px;
            text-align: center;
        }
        .product-card h3 {
            color: #0046BE;
            margin-top: 0;
        }
        .product-card p {
            color: #666;
        }
        .price {
            font-weight: bold;
            color: #0033A0;
            font-size: 1.2em;
        }
    </style>
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">
</head>
<body>
    <header>
            <%- include('partials/dropdown') %>
            <h1>Lista de Produtos</h1>
            
        </div>
    </header>

    <div class="container">
        <div id="products" class="product-grid">
            <!-- Produtos serão inseridos aqui -->
        </div>
    </div>

    <script>
        // Função para buscar e exibir os produtos
        async function fetchAndDisplayProducts() {
            try {
                const response = await fetch('/api/products');
                const products = await response.json();
                const productGrid = document.getElementById('products');
                
                productGrid.innerHTML = ''; // Limpa o conteúdo existente

                products.forEach(product => {
                    const productCard = document.createElement('div');
                    productCard.className = 'product-card';
                    productCard.innerHTML = `
                        <h3>${product.nome}</h3>
                        <p>${product.descricao || 'Sem descrição'}</p>
                        <p>${product.categoria}</p>
                        <p class="price">R$ ${product.preco.toFixed(2)}</p>
                        <p class="availability">Disponível: ${product.disponibilidade === 1 ? 'Sim' : 'Não'}</p>
                        <button onclick="updateProduct(${product.id})">Atualizar</button>
                        <button onclick="deleteProduct(${product.id})">Excluir</button>
                    `;
                    productGrid.appendChild(productCard);
                });
            } catch (error) {
                console.error('Erro ao buscar produtos:', error);
            }
        }

        // Função para atualizar um produto
        function updateProduct(id) {
            window.location.href = `/updateProduct/${id}`;
        }

        // Função para excluir um produto
        async function deleteProduct(id) {
            if (confirm('Tem certeza que deseja excluir este produto?')) {
                try {
                    const response = await fetch(`/api/products/${id}`, {
                        method: 'DELETE'
                    });

                    if (response.ok) {
                        alert('Produto excluído com sucesso!');
                        fetchAndDisplayProducts(); // Atualiza a lista de produtos
                    } else {
                        const errorData = await response.json();
                        alert(`Erro ao excluir produto: ${errorData.error}`);
                    }
                } catch (error) {
                    alert('Erro ao conectar com o servidor');
                }
            }
        }

        // Chama a função quando a página carrega
        window.onload = fetchAndDisplayProducts;
    </script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const urlParams = new URLSearchParams(window.location.search);
            if (urlParams.get('alert') === 'access-denied') {
                Swal.fire({
                    icon: 'info',
                    title: 'Acesso Negado',
                    text: 'Apenas administradores podem acessar esta página.',
                    confirmButtonText: 'OK'
                });
            }
        });
        document.addEventListener('DOMContentLoaded', loadProducts);
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <script src="/public/menuDropdown/dropdown.js"></script>
</body>
</html>